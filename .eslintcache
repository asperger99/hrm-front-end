[{"C:\\Users\\coold\\desktop\\hrm\\src\\index.js":"1","C:\\Users\\coold\\desktop\\hrm\\src\\App.js":"2","C:\\Users\\coold\\Desktop\\hrm\\src\\index.js":"3","C:\\Users\\coold\\Desktop\\hrm\\src\\App.js":"4","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\SignUp\\SignUp.js":"5","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\LandingPage.js":"6","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\SidebarOptions.js":"7","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\AdminPage.js":"8","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\Payrolls.js":"9","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\EmployeeCard.js":"10","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\LeaveRequest.js":"11","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\LoanAndBonus.js":"12","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\EmployeePage.js":"13","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\LeaveApplication.js":"14","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\LoanAndBonusApplication.js":"15","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\ProjectAssigned.js":"16","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\Attendance.js":"17","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\Attendance.js":"18","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\axios.js":"19","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\reducer.js":"20","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\StateProvider.js":"21","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\PrevLoanBonusReq.js":"22","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\PrevLeaveReq.js":"23","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\utils\\utils.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":528,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":430,"mtime":1611134696083,"results":"28","hashOfConfig":"29"},{"size":1533,"mtime":1611422582619,"results":"30","hashOfConfig":"29"},{"size":347,"mtime":1611085177458,"results":"31","hashOfConfig":"29"},{"size":10800,"mtime":1611418271724,"results":"32","hashOfConfig":"29"},{"size":451,"mtime":1611085500425,"results":"33","hashOfConfig":"34"},{"size":24289,"mtime":1611420824687,"results":"35","hashOfConfig":"29"},{"size":1773,"mtime":1611417074499,"results":"36","hashOfConfig":"29"},{"size":10507,"mtime":1611417041495,"results":"37","hashOfConfig":"29"},{"size":4527,"mtime":1611417056296,"results":"38","hashOfConfig":"29"},{"size":3818,"mtime":1611417066220,"results":"39","hashOfConfig":"29"},{"size":8327,"mtime":1611420805860,"results":"40","hashOfConfig":"29"},{"size":4369,"mtime":1611417110113,"results":"41","hashOfConfig":"29"},{"size":3800,"mtime":1611417121082,"results":"42","hashOfConfig":"29"},{"size":1007,"mtime":1610115298906,"results":"43","hashOfConfig":"29"},{"size":6294,"mtime":1611417083709,"results":"44","hashOfConfig":"29"},{"size":3670,"mtime":1611416985285,"results":"45","hashOfConfig":"29"},{"size":176,"mtime":1610896357139,"results":"46","hashOfConfig":"29"},{"size":769,"mtime":1611370822936,"results":"47","hashOfConfig":"29"},{"size":405,"mtime":1610604425103,"results":"48","hashOfConfig":"29"},{"size":1381,"mtime":1611221557721,"results":"49","hashOfConfig":"29"},{"size":1600,"mtime":1611222138241,"results":"50","hashOfConfig":"29"},{"size":5537,"mtime":1611369631591,"results":"51","hashOfConfig":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njml7c",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"svb12p",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1y1tplv",{"filePath":"70","messages":"71","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},"C:\\Users\\coold\\desktop\\hrm\\src\\index.js",[],"C:\\Users\\coold\\desktop\\hrm\\src\\App.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\index.js",[],["117","118"],"C:\\Users\\coold\\Desktop\\hrm\\src\\App.js",["119","120"],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\SignUp\\SignUp.js",["121","122","123","124"],"import React from \"react\";\r\nimport LandingPage from \"../../LandingPage\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nfunction SignUp() {\r\n  const [{ user }, dispatch] = UseStateValue();\r\n\r\n  return (\r\n    <div>\r\n      <LandingPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\LandingPage.js",["125","126","127","128","129"],"import React, { useState } from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport { UseStateValue } from \"./StateProvider\";\r\nimport Axios from \"axios\";\r\nimport { signInValidate, signUpValidate } from \"./utils/utils\";\r\n\r\nconst dep = [\"CSE\", \"IT\", \"ECE\"];\r\nconst des = [\"POST 1\", \"POST 2\", \"POST 3\"];\r\nconst cit = [\"city 1\", \"city 2\", \"city 3\"];\r\nconst sta = [\"state 1\", \"state 2\", \"state 3\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction LandingPage() {\r\n  const [{ user }, dispatch] = UseStateValue();\r\n  const [signInOpen, setSignInOpen] = useState(false);\r\n  const [signUpOpen, setSignUpOpen] = useState(false);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [dob, setDob] = useState(null);\r\n  const [gender, setGender] = useState(\"\");\r\n  const [email, setEmail] = useState(null);\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [pincode, setPincode] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [contact, setContact] = useState(null);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleCloseSignIn = () => {\r\n    setSignInOpen(false);\r\n  };\r\n  const handleCloseSignUp = () => {\r\n    setSignUpOpen(false);\r\n  };\r\n\r\n  const handleSignIn = () => {\r\n    if (!signInValidate(username, password)) return;\r\n    Axios({\r\n      method: \"POST\",\r\n      data: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/login\",\r\n    })\r\n      .then((res) => {\r\n        if (res.data === \"No User Exists\") {\r\n          return alert(res.data);\r\n        }\r\n        localStorage.setItem(\"user\", res.data); //////////////////added 1\r\n        dispatch({\r\n          type: \"UPDATE_USER\",\r\n          item: res.data,\r\n        });\r\n        // console.log(\"user\", user);\r\n        if (res.data) {\r\n          if (res.data?.isAdmin) history.push(\"/admin\");\r\n          else history.push(\"/employee\");\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message));\r\n    // console.log(user);\r\n  };\r\n  const handleSignUp = () => {\r\n    if (password != confirmPassword)\r\n      return alert(\"password and confirmed password are not same!!\");\r\n\r\n    if (\r\n      !signUpValidate(\r\n        fullName,\r\n        username,\r\n        password,\r\n        dob,\r\n        gender,\r\n        email,\r\n        designation,\r\n        department,\r\n        city,\r\n        state,\r\n        pincode,\r\n        contact\r\n      )\r\n    )\r\n      return;\r\n    const obj = {\r\n      fullName,\r\n      username,\r\n      password,\r\n      dob,\r\n      gender,\r\n      email,\r\n      designation,\r\n      department,\r\n      city,\r\n      state,\r\n      pincode,\r\n      contact,\r\n    };\r\n    Axios({\r\n      method: \"POST\",\r\n      data: obj,\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/register\",\r\n    })\r\n      .then((res) => {\r\n        console.log(\"register-->\", res);\r\n        handleCloseSignUp();\r\n        alert(\"successfully signed up, go back and login to proceed.\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        alert(e.message);\r\n      });\r\n  };\r\n\r\n  const body1 = (\r\n    <div className=\"signin__container\">\r\n      <div className=\"signin__container__elements\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          required\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => handleSignIn()}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  const body2 = (\r\n    <div className=\"signup__container\">\r\n      <div className=\"signup__container__personaldetails\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          required\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"full name\"\r\n          required\r\n          value={fullName}\r\n          onChange={(event) => setFullName(event.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          required\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"confirm password\"\r\n          required\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"contact\"\r\n          required\r\n          value={contact}\r\n          onChange={(event) => setContact(event.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"D.O.B\"\r\n          required\r\n          value={dob}\r\n          onChange={(event) => setDob(event.target.value)}\r\n        />\r\n        <FormControl className={classes.formControl} style={{ width: \"290px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">gender</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={gender}\r\n            required\r\n            onChange={(event) => setGender(event.target.value)}\r\n          >\r\n            <MenuItem value=\"Male\">Male</MenuItem>\r\n            <MenuItem value=\"Female\">Female</MenuItem>\r\n            <MenuItem value=\"Other\">Other</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} style={{ width: \"290px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">department</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={department}\r\n            required\r\n            onChange={(event) => setDepartment(event.target.value)}\r\n          >\r\n            {dep.map((d) => (\r\n              <MenuItem value={d}>{d}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} style={{ width: \"290px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">designation</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={designation}\r\n            required\r\n            onChange={(event) => setDesignation(event.target.value)}\r\n          >\r\n            {des.map((d) => (\r\n              <MenuItem value={d}>{d}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} style={{ width: \"290px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">your city</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={city}\r\n            required\r\n            onChange={(event) => setCity(event.target.value)}\r\n          >\r\n            {cit.map((c) => (\r\n              <MenuItem value={c}>{c}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl} style={{ width: \"290px\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">your state</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={state}\r\n            required\r\n            onChange={(event) => setState(event.target.value)}\r\n          >\r\n            {sta.map((s) => (\r\n              <MenuItem value={s}>{s}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"pincode\"\r\n          value={pincode}\r\n          required\r\n          onChange={(e) => setPincode(e.target.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"signup__container__personaldetails__button\"\r\n          onClick={(e) => handleSignUp(e)}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  //  {!user ? <Redirect to=\"/dashboard\" /> : null}\r\n  return (\r\n    <>\r\n      <div>\r\n        <Modal\r\n          className=\"modal\"\r\n          open={signInOpen}\r\n          onClose={handleCloseSignIn}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body1}\r\n        </Modal>\r\n        <Modal\r\n          className=\"modal\"\r\n          open={signUpOpen}\r\n          onClose={handleCloseSignUp}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body2}\r\n        </Modal>\r\n        <div className=\"landingpage__container\">\r\n          <div className=\"landingpage__container__image\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/611328/pexels-photo-611328.jpeg\"\r\n              alt=\"\"\r\n            />\r\n            <div className=\"landingpage__container__content\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setSignInOpen(true)}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setSignUpOpen(true)}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\SidebarOptions.js",[],["130","131"],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\AdminPage.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AdminPage.css\";\r\nimport YoutubeSearchedForIcon from \"@material-ui/icons/YoutubeSearchedFor\";\r\nimport Payrolls from \"./Payrolls\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Attendance from \"./Attendance\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { set } from \"date-fns\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LeaveRequest from \"./LeaveRequest\";\r\nimport LoanAndBonus from \"./LoanAndBonus\";\r\nimport { createEmployeeValidate } from \"../../utils/utils\";\r\n\r\n////////drawer///\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n////////prev requests/////\r\n\r\n////////my content////\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"Aprill\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n////////////////\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction AdminPage(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  //////my own content///////////\r\n  const [{ employees, user }, dispatch] = UseStateValue();\r\n  const [currentSection, setCurrentSection] = useState(\"Employees\");\r\n  const history = useHistory();\r\n  const [payrollUsername, setPayrollUsername] = React.useState(\"\");\r\n  const [payrollMonth, setPayrollMonth] = React.useState(\"\");\r\n  const [payrollYear, setPayrollYear] = React.useState(null);\r\n  const [salaryDue, setSalaryDue] = useState(null);\r\n  const [skip, setSkip] = useState(0);\r\n  const [searchId, setSearchId] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchDepartment, setSearchDepartment] = useState(\"\");\r\n  const [searchDesignation, setSearchDesignation] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [dob, setDob] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contact, setContact] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [salary, setSalary] = useState(null);\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [pincode, setPincode] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(null);\r\n\r\n  const payrollData = () => {\r\n    console.log(\"payroll\");\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/payroll/load\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let temp = [];\r\n        res?.data?.forEach((element, index) => {\r\n          temp.push({\r\n            id: index + 1,\r\n            username: element.username,\r\n            lastPaidMonth: element.lastPaidMonth,\r\n            yearOfMonth: element.yearOfMonth,\r\n            salaryDue: element.salaryDue,\r\n          });\r\n        });\r\n        dispatch({\r\n          type: \"UPDATE_PAYROLL\",\r\n          item: temp,\r\n        });\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const payRollUpdate = () => {\r\n    if (payrollUsername == \"\" || payrollMonth == \"\" || payrollYear == null) {\r\n      return alert(\"All fields are required!!\");\r\n    }\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: {\r\n        username: payrollUsername,\r\n        lastPaidMonth: payrollMonth,\r\n        yearOfMonth: payrollYear,\r\n        salaryDue,\r\n      },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/payroll/update\",\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data == \"No user found\")\r\n          return alert(\"No user found as \" + payrollUsername);\r\n        alert(\"successfully updated Payroll.\");\r\n        payrollData();\r\n        setPayrollUsername(\"\");\r\n        setPayrollMonth(\"\");\r\n        setPayrollYear(\"\");\r\n        setSalaryDue(\"\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"e\", e);\r\n        alert(e.message);\r\n      });\r\n  };\r\n\r\n  const loadAll = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/employees/all\",\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        // setSkip(skip + 10);\r\n        let temp = response.data;\r\n        dispatch({\r\n          type: \"ADD_TO_EMPLOYEES\",\r\n          item: temp.reverse(),\r\n        });\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  useEffect(() => {\r\n    loadAll();\r\n  }, []);\r\n\r\n  const handleSignOut = () => {\r\n    console.log(\"called\");\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/logout\",\r\n    })\r\n      .then((res) => {\r\n        if (res.data === \"successfull\") {\r\n          dispatch({\r\n            type: \"UPDATE_USER\",\r\n            item: null,\r\n          });\r\n          localStorage.clear();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const handleSearch = (id, department, designation, fullName) => {\r\n    const obj = {};\r\n    if (id != \"\") obj._id = id;\r\n    if (department != \"\") obj.department = department;\r\n    if (designation != \"\") obj.designation = designation;\r\n    if (fullName != \"\") obj.fullName = fullName;\r\n    if (Object.keys(obj).length == 0) {\r\n      //alert(\"Atleast one field is required\");\r\n      return loadAll();\r\n    }\r\n\r\n    // console.log(obj);\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: obj,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/employees/query\",\r\n    })\r\n      .then((response) => {\r\n        let temp = response.data;\r\n        dispatch({\r\n          type: \"ADD_TO_EMPLOYEES\",\r\n          item: temp.reverse(),\r\n        });\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    if (\r\n      !createEmployeeValidate(\r\n        fullName,\r\n        username,\r\n        isAdmin,\r\n        gender,\r\n        dob,\r\n        email,\r\n        contact,\r\n        password,\r\n        designation,\r\n        department,\r\n        salary,\r\n        city,\r\n        state,\r\n        pincode\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: {\r\n        fullName,\r\n        username,\r\n        isAdmin,\r\n        gender,\r\n        dob,\r\n        email,\r\n        contact,\r\n        password,\r\n        designation,\r\n        department,\r\n        salary,\r\n        city,\r\n        state,\r\n        pincode,\r\n      },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/employees/new\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(res?.data);\r\n        alert(res?.data);\r\n\r\n        setOpen(false);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const body = (\r\n    <div className=\"update\">\r\n      <h1>\r\n        <span>Name: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={fullName}\r\n          onChange={(e) => {\r\n            setFullName(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>username: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>password: </span>{\" \"}\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>DOB: </span>{\" \"}\r\n        <input\r\n          type=\"date\"\r\n          value={dob}\r\n          onChange={(e) => {\r\n            setDob(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>contact: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={contact}\r\n          onChange={(e) => {\r\n            setContact(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>email: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <FormControl className={classes.formControl} style={{ width: \"95%\" }}>\r\n        <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={gender}\r\n          required\r\n          onChange={(event) => setGender(event.target.value)}\r\n        >\r\n          <MenuItem value=\"Male\">Male</MenuItem>\r\n          <MenuItem value=\"Female\">Female</MenuItem>\r\n          <MenuItem value=\"Other\">Other</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl className={classes.formControl} style={{ width: \"95%\" }}>\r\n        <InputLabel id=\"demo-simple-select-label\">Admin</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={designation}\r\n          required\r\n          onChange={(event) => setIsAdmin(event.target.value)}\r\n        >\r\n          <MenuItem value={false}>No</MenuItem>\r\n          <MenuItem value={true}>Yes</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <h1>\r\n        <span>Department: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={department}\r\n          onChange={(e) => {\r\n            setDepartment(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>Designation: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={designation}\r\n          onChange={(e) => {\r\n            setDesignation(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>Salary: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={salary}\r\n          onChange={(e) => {\r\n            setSalary(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>city: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => {\r\n            setCity(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>state: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={state}\r\n          onChange={(e) => {\r\n            setState(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>pincode: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={pincode}\r\n          onChange={(e) => {\r\n            setPincode(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"update__button\"\r\n        onClick={() => handleCreate()}\r\n      >\r\n        Create\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  //////////////\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <div className=\"avatar__container\">\r\n        <Avatar src=\"/broken-image.jpg\" className=\"avatar__icon\" />\r\n        <div className=\"avatar__details\">\r\n          <i>\r\n            Signed In as <strong>Admin</strong>\r\n          </i>\r\n          <p>\r\n            <strong>{user?.username}</strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          key=\"Employees\"\r\n          onClick={() => setCurrentSection(\"Employees\")}\r\n        >\r\n          <ListItemIcon>\r\n            <PermContactCalendarIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Employees\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          key=\"Attendance\"\r\n          onClick={() => setCurrentSection(\"Attendance\")}\r\n        >\r\n          <ListItemIcon>\r\n            <ListAltIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Attendance\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          key=\"Payrolls\"\r\n          onClick={() => setCurrentSection(\"Payrolls\")}\r\n        >\r\n          <ListItemIcon>\r\n            <AttachMoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Payrolls\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          key=\"Leave Requests\"\r\n          onClick={() => setCurrentSection(\"Leave Requests\")}\r\n        >\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Leave Requests\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          key=\"Loan & Bonus Requests\"\r\n          onClick={() => setCurrentSection(\"Loan & Bonus Requests\")}\r\n        >\r\n          <ListItemIcon>\r\n            <AttachMoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Loan & Bonus Requests\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button key=\"Sign Out\" onClick={() => handleSignOut()}>\r\n          <ListItemIcon>\r\n            <ErrorOutlineIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {currentSection}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div className=\"adminpage__container\">\r\n          <Modal\r\n            className=\"modal\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n\r\n          <div className=\"adminpage__container__right\">\r\n            <div className=\"adminpage__container__right__feed\">\r\n              {currentSection === \"Payrolls\" && (\r\n                <>\r\n                  <Payrolls />\r\n                  <div className=\"payrolls__update\">\r\n                    <h3>Update Or Start payroll for an employee</h3>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"username\"\r\n                      value={payrollUsername}\r\n                      onChange={(e) => setPayrollUsername(e.target.value)}\r\n                    />\r\n                    <FormControl\r\n                      className={classes.formControl}\r\n                      style={{ width: \"290px\" }}\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Month Paid Upto\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={payrollMonth}\r\n                        onChange={(e) => setPayrollMonth(e.target.value)}\r\n                      >\r\n                        {months.map((m) => (\r\n                          <MenuItem value={m}>{m}</MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"year for above Month\"\r\n                      value={payrollYear}\r\n                      onChange={(e) => setPayrollYear(e.target.value)}\r\n                    />\r\n\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"Salary Due\"\r\n                      value={salaryDue}\r\n                      onChange={(e) => setSalaryDue(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      className=\"payrolls__update__button\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => payRollUpdate()}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {currentSection === \"Employees\" && (\r\n                <>\r\n                  <div className=\"employee__search__container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Employee ID\"\r\n                      onChange={(e) => setSearchId(e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Department\"\r\n                      onChange={(e) => setSearchDepartment(e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Full Name\"\r\n                      onChange={(e) => setSearchName(e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Designation\"\r\n                      onChange={(e) => setSearchDesignation(e.target.value)}\r\n                    />\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        handleSearch(\r\n                          searchId,\r\n                          searchDepartment,\r\n                          searchDesignation,\r\n                          searchName\r\n                        )\r\n                      }\r\n                      style={{\r\n                        borderRight: \"1px solid lightgray\",\r\n                        marginRight: \"8px\",\r\n                      }}\r\n                    >\r\n                      <YoutubeSearchedForIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      style={{\r\n                        borderLeft: \"1px solid lightgray\",\r\n                        marginRight: \"8px\",\r\n                      }}\r\n                      onClick={() => setOpen(true)}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </div>\r\n\r\n                  {employees?.length === 0 && (\r\n                    <img\r\n                      src=\"https://media3.giphy.com/media/PUYgk3wpNk0WA/200w.webp?cid=ecf05e47a4f84655b9ad82fb99b59e2b5e309eecf23c3498&rid=200w.webp\"\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n\r\n                  {employees?.map((e) => (\r\n                    <EmployeeCard e={e} key={e._id} />\r\n                  ))}\r\n                  {/* {(employees?.length > 0 || skip > 0) && (\r\n                <div className=\"employee__pagination\">\r\n                  <IconButton\r\n                    disabled={!(skip > 0)}\r\n                    onClick={() => setSkip(skip - 10)}\r\n                  >\r\n                    <ArrowBackIosIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    disabled={employees?.length < 10}\r\n                    // onClick={() => setSkip(skip - 10)}\r\n                    onClick={() => setSkip(skip + 10)}\r\n                  >\r\n                    <ArrowForwardIosIcon />\r\n                  </IconButton>\r\n                </div>\r\n              )} */}\r\n                </>\r\n              )}\r\n              {currentSection === \"Leave Requests\" && (\r\n                <div className=\"leaverequest__container\">\r\n                  <LeaveRequest />\r\n                </div>\r\n              )}\r\n              {currentSection === \"Loan & Bonus Requests\" && (\r\n                <div className=\"loanrequest__container\">\r\n                  <LoanAndBonus />\r\n                </div>\r\n              )}\r\n              {currentSection === \"Attendance\" && (\r\n                <div className=\"attendance__container\">\r\n                  <Attendance />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nAdminPage.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\Payrolls.js",["148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Payrolls.css\";\r\nimport Axios from \"axios\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst columns = [\r\n  { field: \"username\", headerName: \"username\", width: 150 },\r\n  {\r\n    field: \"lastPaidMonth\",\r\n    headerName: \"Last Paid Month\",\r\n    width: 180,\r\n  },\r\n  {\r\n    field: \"yearOfMonth\",\r\n    headerName: \"Year of payment\",\r\n    width: 180,\r\n  },\r\n  {\r\n    field: \"salaryDue\",\r\n    headerName: \"salary due\",\r\n    type: \"number\",\r\n    width: 180,\r\n  },\r\n];\r\n// let temp = [];\r\n\r\nfunction Payrolls() {\r\n  const [{ rows }, dispatch] = UseStateValue();\r\n  // const [rows, setRows] = useState([]);\r\n\r\n  const payrollData = () => {\r\n    console.log(\"payroll\");\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/payroll/load\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let temp = [];\r\n\r\n        res?.data?.forEach((element, index) => {\r\n          temp.push({\r\n            id: index + 1,\r\n            username: element.username,\r\n            lastPaidMonth: element.lastPaidMonth,\r\n            yearOfMonth: element.yearOfMonth,\r\n            salaryDue: element.salaryDue,\r\n          });\r\n        });\r\n        dispatch({\r\n          type: \"UPDATE_PAYROLL\",\r\n          item: temp,\r\n        });\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  // payrollData();\r\n\r\n  useEffect(() => {\r\n    payrollData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: \"70vh\", width: \"90%\", marginTop: \"16px\" }}>\r\n        <DataGrid rows={rows} columns={columns} pageSize={8} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Payrolls;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\EmployeeCard.js",["150","151","152"],"import React, { useState } from \"react\";\r\nimport \"./EmployeeCard.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport axios from \"../axios\";\r\nimport employees from \"../../reducer\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport Axios from \"axios\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { updateValidate } from \"../../utils/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction EmployeeCard({ e }) {\r\n  const [{ employees }, dispatch] = UseStateValue();\r\n  const [more, setMore] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const [fullName, setFullName] = useState(e.fullName);\r\n  const [gender, setGender] = useState(e.gender);\r\n  const [dob, setDob] = useState(e.dob);\r\n  const [email, setEmail] = useState(e.email);\r\n  const [contact, setContact] = useState(e.contact);\r\n  const [salary, setSalary] = useState(e.salary);\r\n  const [city, setCity] = useState(e.city);\r\n  const [state, setState] = useState(e.state);\r\n  const [pincode, setPincode] = useState(e.pincode);\r\n  const [department, setDepartment] = useState(e.department);\r\n  const [designation, setDesignation] = useState(e.designation);\r\n  const [isAdmin, setIsAdmin] = useState(null);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const updateEmployee = () => {\r\n    let obj = {\r\n      fullName,\r\n      email,\r\n      gender,\r\n      dob,\r\n      contact,\r\n      salary,\r\n      city,\r\n      state,\r\n      pincode,\r\n      department,\r\n      designation,\r\n      isAdmin,\r\n    };\r\n    if (\r\n      !updateValidate(\r\n        fullName,\r\n        email,\r\n        gender,\r\n        dob,\r\n        contact,\r\n        salary,\r\n        city,\r\n        state,\r\n        pincode,\r\n        department,\r\n        designation,\r\n        isAdmin\r\n      )\r\n    )\r\n      return;\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: obj,\r\n      url: `https://shrouded-badlands-75056.herokuapp.com/employees/update/${e._id}`,\r\n    })\r\n      .then((response) => {\r\n        setOpen(false);\r\n        alert(\"successfully updated!!\");\r\n\r\n        // console.log(response);\r\n        // axios\r\n        //   .get(\"/employees/all\", { params: { limit: 10, skip: 0 } })\r\n        //   .then((response) => {\r\n        //     dispatch({\r\n        //       type: \"ADD_TO_EMPLOYEES\",\r\n        //       item: response.data,\r\n        //     });\r\n        //   })\r\n        //   .catch((e) => alert(e.message));\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  const deleteEmployee = () => {\r\n    const temp = prompt(\"enter Employee Id you want to delete..\");\r\n    if (temp === \"\" || temp == null) {\r\n      return alert(\"please enter a valid Employee Id\");\r\n    }\r\n    axios\r\n      .delete(\"/employees/delete\", { params: { id: temp } })\r\n      .then((response) => {\r\n        alert(\"successfully deleted!!\");\r\n        // axios\r\n        //   .get(\"/employees/all\", { params: { limit: 10, skip: 0 } })\r\n        //   .then((response) => {\r\n        //     const temp = response.data;\r\n        //     dispatch({\r\n        //       type: \"ADD_TO_EMPLOYEES\",\r\n        //       item: temp.reverse(),\r\n        //     });\r\n        //   })\r\n        //   .catch((e) => alert(e.message));\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const body = (\r\n    <div className=\"update\">\r\n      {/* <h1>\r\n        <span>Employee Id: </span> <input type=\"number\" value={e?._id} />\r\n      </h1> */}\r\n      <h1>\r\n        <span>Name: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={fullName}\r\n          onChange={(e) => {\r\n            setFullName(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n\r\n      <h1>\r\n        <span>DOB: </span>{\" \"}\r\n        <input\r\n          type=\"date\"\r\n          value={new Date(e.dob).toUTCString().substr(0, 10)}\r\n          onChange={(e) => {\r\n            setDob(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>gender: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={gender}\r\n          onChange={(e) => {\r\n            setGender(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>contact: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={contact}\r\n          onChange={(e) => {\r\n            setContact(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>email: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <FormControl className={classes.formControl} style={{ width: \"95%\" }}>\r\n          <InputLabel id=\"demo-simple-select-label\">make admin</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={isAdmin}\r\n            required\r\n            onChange={(event) => setIsAdmin(event.target.value)}\r\n          >\r\n            <MenuItem value={true}>Yes</MenuItem>\r\n            <MenuItem value={false}>No</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </h1>\r\n\r\n      <h1>\r\n        <span>Department: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={department}\r\n          onChange={(e) => {\r\n            setDepartment(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>Designation: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={designation}\r\n          onChange={(e) => {\r\n            setDesignation(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>Salary: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={salary}\r\n          onChange={(e) => {\r\n            setSalary(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>city: </span>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={(e) => {\r\n            setCity(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>state: </span>\r\n        <input\r\n          type=\"text\"\r\n          value={state}\r\n          onChange={(e) => {\r\n            setState(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <h1>\r\n        <span>pincode: </span>{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={pincode}\r\n          onChange={(e) => {\r\n            setPincode(e.target.value);\r\n          }}\r\n        />\r\n      </h1>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"update__button\"\r\n        onClick={() => updateEmployee()}\r\n      >\r\n        Update\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"employee\">\r\n      <div className=\"employeecard__container\">\r\n        <Modal\r\n          className=\"modal\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n\r\n        <div className=\"employeecard__container__avatar\">\r\n          <img\r\n            src=\"https://t4.ftcdn.net/jpg/00/65/77/27/240_F_65772719_A1UV5kLi5nCEWI0BNLLiFaBPEkUbv5Fv.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"employeecard__container__details\">\r\n          <h1>\r\n            <span>Employee Id: </span> {e._id}\r\n          </h1>\r\n          <h1>\r\n            <span>Name: </span> {e.fullName}\r\n          </h1>\r\n\r\n          <h1>\r\n            <span>contact: </span> {e.contact}\r\n          </h1>\r\n          <h1>\r\n            <span>email: </span> {e.email}\r\n          </h1>\r\n\r\n          <IconButton\r\n            onClick={() => setMore(true)}\r\n            style={{ display: !more ? \"block\" : \"none\" }}\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => setMore(false)}\r\n            style={{ display: more ? \"block\" : \"none\" }}\r\n          >\r\n            <ExpandLessIcon />\r\n          </IconButton>\r\n          <div\r\n            className=\"employeecard__container__moredetails\"\r\n            style={{ display: more ? \"block\" : \"none\" }}\r\n          >\r\n            <h1>\r\n              <span>dob: </span>{\" \"}\r\n              {`${new Date(e.dob).getDate()}/${\r\n                new Date(e.dob).getMonth(e.dob) + 1\r\n              }/${new Date(e.dob).getFullYear()}`}\r\n            </h1>\r\n            <h1>\r\n              <span>Department: </span> {e.department}\r\n            </h1>\r\n            <h1>\r\n              <span>Designation: </span> {e.designation}\r\n            </h1>\r\n            <h1>\r\n              <span>Salary: </span> {e.salary}\r\n            </h1>\r\n            <h1>\r\n              <span>city: </span> {e.city}\r\n            </h1>\r\n            <h1>\r\n              <span>state: </span> {e.state}\r\n            </h1>\r\n            <h1>\r\n              <span>pincode: </span> {e.pincode}\r\n            </h1>\r\n            <div className=\"create__delete__icon\">\r\n              <IconButton\r\n                onClick={() => setOpen(true)}\r\n                style={{\r\n                  borderRight: \"1px solid lightgray\",\r\n                  marginRight: \"8px\",\r\n                }}\r\n              >\r\n                <CreateIcon className=\"employee__create__icon\" />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => deleteEmployee()}\r\n                style={{\r\n                  borderLeft: \"1px solid lightgray\",\r\n                  marginRight: \"8px\",\r\n                }}\r\n              >\r\n                <DeleteForeverIcon className=\"employee__delete__icon\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\LeaveRequest.js",["153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./LeaveRequest.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction LeaveRequest() {\r\n  const [pendingLeave, setPendingLeave] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const loadPrevLeave = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/leavereq/load\",\r\n    })\r\n      .then((res) => {\r\n        let temp = res.data?.filter((e) => e.status == \"pending\");\r\n        setPendingLeave(temp);\r\n        // console.log(\"response=>\", res.data);\r\n        // console.log(\"temp=>\", temp);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPrevLeave();\r\n  }, []);\r\n\r\n  const handleClick = (action, id) => {\r\n    // alert(action + \" \" + id);\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: { id, action },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/leavereq/action\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        alert(\"Marked as \" + action);\r\n        loadPrevLeave();\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  return (\r\n    <>\r\n      <h2> Total Applications : {pendingLeave?.length} </h2>\r\n\r\n      {pendingLeave?.map((e) => {\r\n        const d1 = new Date(e.from);\r\n        const d2 = new Date(e.to);\r\n        const d3 = new Date(e.createdAt);\r\n        return (\r\n          <div className={classes.root}>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Application from : {e.username}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                  <div className=\"leaverequest\">\r\n                    <div className=\"leaverequest__employee\">\r\n                      <span>\r\n                        <strong> Application Date: </strong>{\" \"}\r\n                        {`${d3?.getDate()}/${\r\n                          d3?.getMonth() + 1\r\n                        }/${d3?.getFullYear()}`}\r\n                      </span>\r\n                      <span>\r\n                        <strong>From : </strong>{\" \"}\r\n                        {`${d1?.getDate()}/${\r\n                          d1?.getMonth() + 1\r\n                        }/${d1?.getFullYear()}`}\r\n                      </span>\r\n                      <span>\r\n                        <strong>To : </strong>{\" \"}\r\n                        {`${d2?.getDate()}/${\r\n                          d2?.getMonth() + 1\r\n                        }/${d2?.getFullYear()}`}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"leaverequest__reason\">\r\n                      <strong>Reason : </strong>\r\n                      <p>{e.reason}</p>\r\n                    </div>\r\n                    <div className=\"leaverequest__action\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleClick(\"accepted\", e._id)}\r\n                      >\r\n                        Accept\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleClick(\"rejected\", e._id)}\r\n                      >\r\n                        Reject\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaveRequest;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\LoanAndBonus.js",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./LoanAndBonus.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction LoanAndBonus() {\r\n  const [pendingLoan, setPendingLoan] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const loadPrevLoan = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/loanbonusreq/load\",\r\n    })\r\n      .then((res) => {\r\n        let temp = res.data?.filter((e) => e.status == \"pending\");\r\n        setPendingLoan(temp);\r\n        console.log(\"response=>\", res.data);\r\n        console.log(\"temp=>\", temp);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const handleClick = (id, action) => {\r\n    // alert(action + \" \" + id);\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: { id, action },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/loanbonusreq/action\",\r\n    })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        alert(\"Marked as \" + action);\r\n        loadPrevLoan();\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPrevLoan();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Total Applications : {pendingLoan?.length}</h2>\r\n      {pendingLoan.map((e) => {\r\n        const d1 = new Date(e.createdAt);\r\n        return (\r\n          <div className={classes.root}>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Application from : {e.username}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                  <div className=\"loanrequest\">\r\n                    <div className=\"loanrequest__employee\">\r\n                      Application Date:{\" \"}\r\n                      {`${d1?.getDate()}/${\r\n                        d1?.getMonth() + 1\r\n                      }/${d1?.getFullYear()}`}\r\n                    </div>\r\n                    <div className=\"loanrequest__reason\">\r\n                      <strong>Application Body : </strong>\r\n                      <p>{e.application}</p>\r\n                    </div>\r\n                    <div className=\"loanrequest__action\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleClick(e._id, \"accepted\")}\r\n                      >\r\n                        Accept\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={() => handleClick(e._id, \"rejected\")}\r\n                      >\r\n                        Reject\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoanAndBonus;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\EmployeePage.js",["156","157","158","159","160"],"import React, { useState } from \"react\";\r\n// import EmployeeFeatures from \"../EmployeeHomePage/EmployeeFeatures\";\r\nimport Attendance from \"./Attendance\";\r\nimport \"./EmployeePage.css\";\r\nimport LeaveApplication from \"./LeaveApplication\";\r\nimport LoanAndBonusApplication from \"./LoanAndBonusApplication\";\r\nimport ProjectAssigned from \"./ProjectAssigned\";\r\nimport Axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n////////drawer///\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\n\r\n////////my content////\r\n\r\n////////////////\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction EmployeePage(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  //////my own content///////////\r\n  const [currentSection, setCurrentSection] = useState(\"Attendance\");\r\n  const [{ user }, dispatch] = UseStateValue();\r\n  const handleSignOut = () => {\r\n    console.log(\"called\");\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/logout\",\r\n    })\r\n      .then((res) => {\r\n        if (res.data === \"successfull\") {\r\n          dispatch({\r\n            type: \"UPDATE_USER\",\r\n            item: null,\r\n          });\r\n          localStorage.clear();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  //////////////\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <div className=\"avatar__container\">\r\n        <Avatar src=\"/broken-image.jpg\" className=\"avatar__icon\" />\r\n        <div className=\"avatar__details\">\r\n          <i>Signed In as</i>\r\n          <p>\r\n            <strong>{user?.username} </strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          key=\"Attendance\"\r\n          onClick={() => setCurrentSection(\"Attendance\")}\r\n        >\r\n          <ListItemIcon>\r\n            <ListAltIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Attendance\" />\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          key=\"Leave Application\"\r\n          onClick={() => setCurrentSection(\"Leave Application\")}\r\n        >\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Leave Application\" />\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          key=\"Loan-Bonus Application\"\r\n          onClick={() => setCurrentSection(\"Loan-Bonus Application\")}\r\n        >\r\n          <ListItemIcon>\r\n            <AttachMoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Loan-Bonus Application\" />\r\n        </ListItem>\r\n        {/* <Divider />\r\n        <ListItem\r\n          button\r\n          key=\"About Us\"\r\n          onClick={() => setCurrentSection(\"About Us\")}\r\n        >\r\n          <ListItemIcon>\r\n            <BusinessIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"About Us\" />\r\n        </ListItem> */}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button key=\"Sign Out\" onClick={() => handleSignOut()}>\r\n          <ListItemIcon>\r\n            <ErrorOutlineIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {currentSection}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div className=\"employeepage__container\">\r\n          <div className=\"employeepage__container__right__feed\">\r\n            {currentSection === \"Leave Application\" && (\r\n              <>\r\n                <LeaveApplication />\r\n              </>\r\n            )}\r\n            {currentSection === \"Loan-Bonus Application\" && (\r\n              <>\r\n                <LoanAndBonusApplication />\r\n              </>\r\n            )}\r\n            {currentSection === \"Projects Assigned\" && (\r\n              <>\r\n                <ProjectAssigned />\r\n              </>\r\n            )}\r\n            {currentSection === \"Attendance\" && (\r\n              <>\r\n                <Attendance />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nEmployeePage.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default EmployeePage;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\LeaveApplication.js",["161","162","163","164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./LeaveApplication.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport PrevLeaveReq from \"./PrevLeaveReq\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction LeaveApplication() {\r\n  const [from, setFrom] = useState(null);\r\n  const [to, setTo] = useState(null);\r\n  const [{ user }, dispatch] = UseStateValue();\r\n  const [reason, setReason] = useState(\"\");\r\n  const [prevReq, setPrevReq] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const loadPrevRequests = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: `https://shrouded-badlands-75056.herokuapp.com/leavereq/load/${user?.username}`,\r\n    })\r\n      .then((res) => {\r\n        const t = res.data;\r\n        setPrevReq(t.reverse());\r\n\r\n        console.log(res.data);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  useEffect(() => {\r\n    loadPrevRequests();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    const d1 = new Date(from);\r\n    const d2 = new Date();\r\n\r\n    if (\r\n      from > to ||\r\n      (d1.getDate() < d2.getDate() &&\r\n        d1.getMonth() == d2.getMonth() &&\r\n        d1.getFullYear() == d2.getFullYear())\r\n    ) {\r\n      return alert(\"Choose date correctly.\");\r\n    }\r\n    if (from === null || to === null || reason === \"\") {\r\n      return alert(\"Each field is required.\");\r\n    }\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: {\r\n        from,\r\n        to,\r\n        reason,\r\n        username: user?.username,\r\n      },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/leavereq/create\",\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        alert(\"successfully placed the leave request.\");\r\n        setFrom(null);\r\n        setTo(null);\r\n        setReason(\"\");\r\n        loadPrevRequests();\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"leaveapplication\">\r\n        <h1>Ask for leave:</h1>\r\n        <form>\r\n          <strong>From: </strong>\r\n          <input\r\n            type=\"date\"\r\n            value={from}\r\n            onChange={(e) => setFrom(e.target.value)}\r\n          />\r\n          <strong>To: </strong>\r\n          <input\r\n            type=\"date\"\r\n            value={to}\r\n            onChange={(e) => setTo(e.target.value)}\r\n          />\r\n          {/* <label for=\"w3review\">Reason:</label> */}\r\n          <strong>Reason: </strong>\r\n          <textarea\r\n            id=\"w3review\"\r\n            name=\"w3review\"\r\n            rows=\"4\"\r\n            cols=\"40\"\r\n            value={reason}\r\n            onChange={(e) => setReason(e.target.value)}\r\n          ></textarea>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            onClick={() => handleClick()}\r\n          >\r\n            submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div className=\"prevReq\">\r\n        {prevReq.map((a, index) => (\r\n          <div className={classes.root}>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Previous Request {index + 1}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                  <PrevLeaveReq data={a} />\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaveApplication;\r\n\r\n{\r\n  /* <PrevLeaveReq data={a} /> */\r\n}\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\LoanAndBonusApplication.js",["166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./LoanAndBonusApplication.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../axios\";\r\nimport Axios from \"axios\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport PrevLoanBonusReq from \"./PrevLoanBonusReq\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction LoanAndBonusApplication() {\r\n  const [application, setApplication] = useState(\"\");\r\n  const [prevApplication, setPrevApplication] = useState([]);\r\n  const [{ user }, dispatch] = UseStateValue();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    sync();\r\n  }, []);\r\n  const sync = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: `https://shrouded-badlands-75056.herokuapp.com/loanbonusreq/load/${user?.username}`,\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const t = res.data;\r\n        setPrevApplication(t.reverse());\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n  const handleClick = () => {\r\n    if (application === \"\") {\r\n      return alert(\"write a proper application!!\");\r\n    }\r\n\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      data: {\r\n        application,\r\n        username: user?.username,\r\n      },\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/loanbonusreq/create\",\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setApplication(\"\");\r\n        alert(\"successfully placed your request.\");\r\n        sync();\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoanAndBonusApplication__container\">\r\n      <div className=\"loanandbonusapplication\">\r\n        <h1>Ask for Loan Or Bonus:</h1>\r\n        <form>\r\n          {/* <label for=\"w3review\">Reason:</label> */}\r\n          <span>Application : </span>\r\n          <textarea\r\n            id=\"w3review\"\r\n            name=\"w3review\"\r\n            rows=\"10\"\r\n            cols=\"40\"\r\n            value={application}\r\n            onChange={(e) => setApplication(e.target.value)}\r\n          ></textarea>\r\n\r\n          <Button\r\n            disabled={application.length <= 0}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n          >\r\n            submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div className=\"previous__requests\">\r\n        {/* <p>Previous Requests:</p> */}\r\n        {prevApplication.map((a, index) => (\r\n          <div className={classes.root}>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Previous Application {index + 1}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                  <PrevLoanBonusReq data={a} />\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoanAndBonusApplication;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\ProjectAssigned.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\Attendance.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React, { useState } from \"react\";\r\nimport \"./Attendance.css\";\r\nimport \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"../axios\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { UseStateValue } from \"../../StateProvider\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\n\r\nfunction Attendance() {\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  const [{ user }, dispatch] = UseStateValue();\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [present, setPresent] = useState([]);\r\n  const [presentInRange, setPresentInRange] = useState([]);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const selectionRange = {\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  function handleSelect(ranges) {\r\n    setStartDate(ranges.selection.startDate);\r\n    setEndDate(ranges.selection.endDate);\r\n  }\r\n\r\n  const handleAttendance = () => {\r\n    Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"https://shrouded-badlands-75056.herokuapp.com/user\",\r\n    })\r\n      .then((res) => {\r\n        const st = new Date(startDate);\r\n        const ed = new Date(endDate);\r\n        const d2 = new Date();\r\n        const temp = res.data.presentOn?.filter((d) => {\r\n          const t = new Date(d);\r\n          if (\r\n            t.getDate() == ed.getDate() &&\r\n            t.getMonth() == ed.getMonth() &&\r\n            t.getFullYear() == ed.getFullYear()\r\n          ) {\r\n            return true;\r\n          }\r\n          if (\r\n            t.getDate() == st.getDate() &&\r\n            t.getMonth() == st.getMonth() &&\r\n            t.getFullYear() == st.getFullYear()\r\n          ) {\r\n            return true;\r\n          }\r\n          return t.getTime() >= st.getTime() && t.getTime() <= ed.getTime();\r\n        });\r\n        setPresentInRange(temp);\r\n        console.log(\"temp--->\", temp);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    const d1 = new Date(date);\r\n    const d2 = new Date();\r\n    let repeat = false;\r\n    user.presentOn.every((d) => {\r\n      const t = new Date(d);\r\n      if (\r\n        t.getDate() == d2.getDate() &&\r\n        t.getMonth() == d2.getMonth() &&\r\n        t.getFullYear() == d2.getFullYear()\r\n      ) {\r\n        repeat = true;\r\n        alert(\"already marked your attendance for today.\");\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    if (repeat) {\r\n      return;\r\n    }\r\n    if (d1.getDay() == 0 || d1.getDay() == 6) {\r\n      return alert(\"not a working day!!\");\r\n    }\r\n    if (\r\n      d1.getDate() == d2.getDate() &&\r\n      d1.getMonth() == d2.getMonth() &&\r\n      d1.getFullYear() == d2.getFullYear()\r\n    ) {\r\n      Axios({\r\n        method: \"POST\",\r\n        withCredentials: true,\r\n        params: { id: user?._id },\r\n        data: { date: selectedDate },\r\n        url:\r\n          \"https://shrouded-badlands-75056.herokuapp.com/employees/attendance\",\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          alert(\"successfully marked your attendance.\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          alert(e.message);\r\n        });\r\n    } else {\r\n      return alert(\"You can mark attendance only for today\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"attendance__container\">\r\n      <div className=\"attendance__container__input\">\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container justify=\"space-around\">\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"date-picker-dialog\"\r\n              label=\" Mark your attendance \"\r\n              format=\"MM/dd/yyyy\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n\r\n        <Button\r\n          onClick={() => setShowSearch(!showSearch)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className=\"attendance__container__input__button\"\r\n        >\r\n          {showSearch === false\r\n            ? \"select date to view attendance record\"\r\n            : \"hide\"}\r\n        </Button>\r\n      </div>\r\n\r\n      {showSearch && (\r\n        <div className=\"daterange__container\">\r\n          <DateRangePicker ranges={[selectionRange]} onChange={handleSelect} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className=\"attendance__daterange__button\"\r\n            onClick={() => handleAttendance()}\r\n          >\r\n            view attendance\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div className=\"show__attendance\">\r\n        <p>No of days you were present on : {presentInRange?.length}</p>\r\n        <div className=\"show__attendance__dates\">\r\n          {presentInRange?.map((d) => {\r\n            const x = new Date(d);\r\n            {\r\n              /* alert(d); */\r\n            }\r\n            return (\r\n              <div className=\"dates\">\r\n                <span>\r\n                  {x.getDate()}/{x.getMonth() + 1}/{x.getFullYear()}\r\n                </span>\r\n                <span>Present</span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Attendance;\r\n\r\n{\r\n  /* <div style={{ minHeight: \"70vh\", width: \"70%\", marginTop: \"16px\" }}>\r\n        <DataGrid rows={rows} columns={columns} pageSize={10} />\r\n      </div> */\r\n}\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\AdminHomePage\\Attendance.js",["198","199","200","201","202","203","204","205","206","207"],"import React, { useState } from \"react\";\r\nimport \"./Attendance.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport Axios from \"axios\";\r\nimport { set } from \"date-fns\";\r\n\r\nfunction Attendance() {\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [employeeId, setEmployeeId] = useState(null);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [present, setPresent] = useState([]);\r\n  const [presentInRange, setPresentInRange] = useState([]);\r\n\r\n  const selectionRange = {\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  function handleSelect(ranges) {\r\n    setStartDate(ranges.selection.startDate);\r\n    setEndDate(ranges.selection.endDate);\r\n  }\r\n\r\n  const handleShowAttendance = () => {\r\n    if (employeeId === null) {\r\n      return alert(\"enter employee id...\");\r\n    }\r\n    Axios({\r\n      method: \"POST\",\r\n      withCredentials: true,\r\n      url: `https://shrouded-badlands-75056.herokuapp.com/employees/search/${employeeId}`,\r\n    })\r\n      .then((res) => {\r\n        // setPresent(res.data.presentOn);\r\n        const st = new Date(startDate);\r\n        const ed = new Date(endDate);\r\n        const d2 = new Date();\r\n        const temp = res.data.presentOn?.filter((d) => {\r\n          const t = new Date(d);\r\n          if (\r\n            t.getDate() == ed.getDate() &&\r\n            t.getMonth() == ed.getMonth() &&\r\n            t.getFullYear() == ed.getFullYear()\r\n          ) {\r\n            return true;\r\n          }\r\n          if (\r\n            t.getDate() == st.getDate() &&\r\n            t.getMonth() == st.getMonth() &&\r\n            t.getFullYear() == st.getFullYear()\r\n          ) {\r\n            return true;\r\n          }\r\n          return t.getTime() >= st.getTime() && t.getTime() <= ed.getTime();\r\n        });\r\n        setPresentInRange(temp);\r\n        console.log(\"temp--->\", temp);\r\n      })\r\n      .catch((e) => alert(e.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"attandance__container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter valid Employee Id\"\r\n        onChange={(e) => setEmployeeId(e.target.value)}\r\n      />\r\n      <Button\r\n        onClick={() => setShowSearch(!showSearch)}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\"attendance__daterange__button\"\r\n        // disabled={employeeId === null}\r\n      >\r\n        {showSearch === false ? \"Select Date-Range\" : \"hide\"}\r\n      </Button>\r\n      {showSearch && (\r\n        <div className=\"daterange__container\">\r\n          <DateRangePicker ranges={[selectionRange]} onChange={handleSelect} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className=\"attendance__daterange__button\"\r\n            onClick={() => handleShowAttendance()}\r\n          >\r\n            See Attendance\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div className=\"show__attendance\">\r\n        <p>No of days employee was present on : {presentInRange?.length}</p>\r\n        <div className=\"show__attendance__dates\">\r\n          {presentInRange?.map((d) => {\r\n            const x = new Date(d);\r\n            return (\r\n              <div className=\"dates\">\r\n                <span>\r\n                  {x.getDate()}/{x.getMonth() + 1}/{x.getFullYear()}\r\n                </span>\r\n                <span>Present</span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Attendance;\r\n","C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\axios.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\reducer.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\StateProvider.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\PrevLoanBonusReq.js",["208"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport \"./PrevLoanBonusReq.css\";\r\nfunction PrevLoanBonusReq({ data }) {\r\n  const d = new Date(data.createdAt);\r\n\r\n  return (\r\n    <div className=\"prev__loanrequest\">\r\n      <div className=\"prev__loanrequest__date\">\r\n        <span>\r\n          <strong>Date: </strong>{\" \"}\r\n          {`${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`}\r\n        </span>\r\n      </div>\r\n      <div className=\"prev__loanrequest__reason\">\r\n        <strong>Application Body : </strong>\r\n        <p>{data.application}</p>\r\n      </div>\r\n      <div className=\"prev__loanrequest__action\">\r\n        {data.status === \"pending\" && (\r\n          <Chip label={data.status} icon={<TimerIcon />} />\r\n        )}\r\n        {data.status === \"accepted\" && (\r\n          <Chip\r\n            icon={<ThumbUpIcon />}\r\n            label=\"Accepted\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n        {data.status === \"rejected\" && (\r\n          <Chip icon={<ThumbDownIcon />} label=\"Rejected\" color=\"secondary\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrevLoanBonusReq;\r\n",["209","210"],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\pages\\EmployeeHomePage\\PrevLeaveReq.js",[],"C:\\Users\\coold\\Desktop\\hrm\\src\\components\\utils\\utils.js",["211","212","213"],"// import Axios from \"axios\";\r\n\r\nexport const updateValidate = (\r\n  fullName,\r\n  email,\r\n  gender,\r\n  dob,\r\n  contact,\r\n  salary,\r\n  city,\r\n  state,\r\n  pincode,\r\n  department,\r\n  designation,\r\n  isAdmin\r\n) => {\r\n  if (dob == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (contact == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (pincode == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (!fullName) {\r\n    alert(\"Full Name field is required\");\r\n    return false;\r\n  }\r\n  if (!gender) {\r\n    alert(\"gender field is required\");\r\n    return false;\r\n  }\r\n  if (!department) {\r\n    alert(\"department field is required\");\r\n    return false;\r\n  }\r\n  if (!designation) {\r\n    alert(\"designation field is required\");\r\n    return false;\r\n  }\r\n  if (!city) {\r\n    alert(\"city field is required\");\r\n    return false;\r\n  }\r\n  if (!state) {\r\n    alert(\"state field is required\");\r\n    return false;\r\n  }\r\n  if (!email) {\r\n    alert(\"Email field is required\");\r\n    return false;\r\n  }\r\n  if (salary == null) {\r\n    alert(\"salary field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (isAdmin == null) {\r\n    alert(\"Admin field is required\");\r\n    return false;\r\n  }\r\n  if (contact.toString().length != 10) {\r\n    alert(\"contact number should be of 10 degits!!\");\r\n    return false;\r\n  }\r\n\r\n  if (!email.includes(\"@\")) {\r\n    alert(\"Enter a valid email.\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\nexport const signInValidate = (username, password) => {\r\n  if (!username || !password) {\r\n    alert(\"each field is required\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const createEmployeeValidate = (\r\n  fullName,\r\n  username,\r\n  isAdmin,\r\n  gender,\r\n  dob,\r\n  email,\r\n  contact,\r\n  password,\r\n  designation,\r\n  department,\r\n  salary,\r\n  city,\r\n  state,\r\n  pincode\r\n) => {\r\n  if (!fullName) {\r\n    alert(\"Full Name field is required\");\r\n    return false;\r\n  }\r\n  if (!username) {\r\n    alert(\"username field is required\");\r\n    return false;\r\n  }\r\n  if (!gender) {\r\n    alert(\"gender field is required\");\r\n    return false;\r\n  }\r\n  if (!department) {\r\n    alert(\"department field is required\");\r\n    return false;\r\n  }\r\n  if (!designation) {\r\n    alert(\"designation field is required\");\r\n    return false;\r\n  }\r\n  if (dob == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (contact == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (!password) {\r\n    alert(\"password is required\");\r\n    return false;\r\n  }\r\n  if (pincode == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (!city) {\r\n    alert(\"city field is required\");\r\n    return false;\r\n  }\r\n  if (!state) {\r\n    alert(\"state field is required\");\r\n    return false;\r\n  }\r\n  if (!email) {\r\n    alert(\"Email field is required\");\r\n    return false;\r\n  }\r\n  if (salary == null) {\r\n    alert(\"salary field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (isAdmin == null) {\r\n    alert(\"Admin field is required\");\r\n    return false;\r\n  }\r\n  if (contact.toString().length != 10) {\r\n    alert(\"contact number should be of 10 degits!!\");\r\n    return false;\r\n  }\r\n\r\n  if (!email.includes(\"@\")) {\r\n    alert(\"Enter a valid email.\");\r\n    return false;\r\n  }\r\n  let decimal = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n\r\n  let str = \"\" + password;\r\n  if (!str.match(decimal)) {\r\n    alert(\r\n      \"password should be between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\"\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const signUpValidate = (\r\n  fullName,\r\n  username,\r\n  password,\r\n  dob,\r\n  gender,\r\n  email,\r\n  designation,\r\n  department,\r\n  city,\r\n  state,\r\n  pincode,\r\n  contact\r\n) => {\r\n  if (!email) {\r\n    alert(email);\r\n    alert(\"Email field is required\");\r\n    return false;\r\n  }\r\n  if (!username) {\r\n    alert(\"username field is required\");\r\n    return false;\r\n  }\r\n  if (!fullName) {\r\n    alert(\"Full Name field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (dob == null) {\r\n    alert(\"dob field is required\");\r\n    return false;\r\n  }\r\n  if (contact == null) {\r\n    alert(\"contact field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (!gender) {\r\n    alert(\"gender field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (!password) {\r\n    alert(\"password is required\");\r\n    return false;\r\n  }\r\n  if (!department) {\r\n    alert(\"department field is required\");\r\n    return false;\r\n  }\r\n  if (!designation) {\r\n    alert(\"designation field is required\");\r\n    return false;\r\n  }\r\n  if (!city) {\r\n    alert(\"city field is required\");\r\n    return false;\r\n  }\r\n  if (!state) {\r\n    alert(\"state field is required\");\r\n    return false;\r\n  }\r\n  if (!pincode == null) {\r\n    alert(\"pincode field is required\");\r\n    return false;\r\n  }\r\n\r\n  if (contact.toString().length != 10) {\r\n    alert(\"contact number should be of 10 degits!!\");\r\n    return false;\r\n  }\r\n\r\n  //   let mailformat = /^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$/;\r\n\r\n  if (!email.includes(\"@\")) {\r\n    alert(\"Enter a valid email.\");\r\n    return false;\r\n  }\r\n  let decimal = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n\r\n  let str = \"\" + password;\r\n  if (!str.match(decimal)) {\r\n    alert(\r\n      \"password should be between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\"\r\n    );\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n",{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":8,"nodeType":"220","messageId":"221","endLine":7,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":33,"column":6,"nodeType":"224","endLine":33,"endColumn":8,"suggestions":"225"},{"ruleId":"218","severity":1,"message":"226","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":18},{"ruleId":"218","severity":1,"message":"227","line":4,"column":20,"nodeType":"220","messageId":"221","endLine":4,"endColumn":24},{"ruleId":"218","severity":1,"message":"228","line":7,"column":12,"nodeType":"220","messageId":"221","endLine":7,"endColumn":16},{"ruleId":"218","severity":1,"message":"229","line":7,"column":20,"nodeType":"220","messageId":"221","endLine":7,"endColumn":28},{"ruleId":"218","severity":1,"message":"230","line":5,"column":22,"nodeType":"220","messageId":"221","endLine":5,"endColumn":41},{"ruleId":"218","severity":1,"message":"226","line":10,"column":10,"nodeType":"220","messageId":"221","endLine":10,"endColumn":18},{"ruleId":"218","severity":1,"message":"227","line":10,"column":20,"nodeType":"220","messageId":"221","endLine":10,"endColumn":24},{"ruleId":"218","severity":1,"message":"228","line":31,"column":12,"nodeType":"220","messageId":"221","endLine":31,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":87,"column":18,"nodeType":"233","messageId":"234","endLine":87,"endColumn":20},{"ruleId":"214","replacedBy":"235"},{"ruleId":"216","replacedBy":"236"},{"ruleId":"218","severity":1,"message":"237","line":14,"column":8,"nodeType":"220","messageId":"221","endLine":14,"endColumn":24},{"ruleId":"218","severity":1,"message":"238","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":27},{"ruleId":"218","severity":1,"message":"239","line":19,"column":10,"nodeType":"220","messageId":"221","endLine":19,"endColumn":13},{"ruleId":"218","severity":1,"message":"240","line":37,"column":8,"nodeType":"220","messageId":"221","endLine":37,"endColumn":17},{"ruleId":"218","severity":1,"message":"241","line":42,"column":8,"nodeType":"220","messageId":"221","endLine":42,"endColumn":16},{"ruleId":"218","severity":1,"message":"242","line":125,"column":10,"nodeType":"220","messageId":"221","endLine":125,"endColumn":14},{"ruleId":"218","severity":1,"message":"243","line":125,"column":16,"nodeType":"220","messageId":"221","endLine":125,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":175,"column":25,"nodeType":"233","messageId":"234","endLine":175,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":175,"column":47,"nodeType":"233","messageId":"234","endLine":175,"endColumn":49},{"ruleId":"231","severity":1,"message":"244","line":191,"column":22,"nodeType":"233","messageId":"234","endLine":191,"endColumn":24},{"ruleId":"222","severity":1,"message":"245","line":225,"column":6,"nodeType":"224","endLine":225,"endColumn":8,"suggestions":"246"},{"ruleId":"231","severity":1,"message":"232","line":249,"column":12,"nodeType":"233","messageId":"234","endLine":249,"endColumn":14},{"ruleId":"231","severity":1,"message":"232","line":250,"column":20,"nodeType":"233","messageId":"234","endLine":250,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":251,"column":21,"nodeType":"233","messageId":"234","endLine":251,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":252,"column":18,"nodeType":"233","messageId":"234","endLine":252,"endColumn":20},{"ruleId":"231","severity":1,"message":"244","line":253,"column":33,"nodeType":"233","messageId":"234","endLine":253,"endColumn":35},{"ruleId":"218","severity":1,"message":"247","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"248","line":64,"column":6,"nodeType":"224","endLine":64,"endColumn":8,"suggestions":"249"},{"ruleId":"218","severity":1,"message":"250","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":17},{"ruleId":"218","severity":1,"message":"251","line":32,"column":12,"nodeType":"220","messageId":"221","endLine":32,"endColumn":21},{"ruleId":"218","severity":1,"message":"229","line":32,"column":25,"nodeType":"220","messageId":"221","endLine":32,"endColumn":33},{"ruleId":"218","severity":1,"message":"252","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"244","line":35,"column":53,"nodeType":"233","messageId":"234","endLine":35,"endColumn":55},{"ruleId":"231","severity":1,"message":"244","line":33,"column":53,"nodeType":"233","messageId":"234","endLine":33,"endColumn":55},{"ruleId":"218","severity":1,"message":"253","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"226","line":10,"column":10,"nodeType":"220","messageId":"221","endLine":10,"endColumn":18},{"ruleId":"218","severity":1,"message":"240","line":24,"column":8,"nodeType":"220","messageId":"221","endLine":24,"endColumn":17},{"ruleId":"218","severity":1,"message":"241","line":29,"column":8,"nodeType":"220","messageId":"221","endLine":29,"endColumn":16},{"ruleId":"218","severity":1,"message":"254","line":35,"column":8,"nodeType":"220","messageId":"221","endLine":35,"endColumn":20},{"ruleId":"218","severity":1,"message":"229","line":27,"column":20,"nodeType":"220","messageId":"221","endLine":27,"endColumn":28},{"ruleId":"222","severity":1,"message":"255","line":48,"column":6,"nodeType":"224","endLine":48,"endColumn":8,"suggestions":"256"},{"ruleId":"231","severity":1,"message":"244","line":57,"column":23,"nodeType":"233","messageId":"234","endLine":57,"endColumn":25},{"ruleId":"231","severity":1,"message":"244","line":58,"column":26,"nodeType":"233","messageId":"234","endLine":58,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":152,"column":1,"nodeType":"259","messageId":"260","endLine":154,"endColumn":2},{"ruleId":"218","severity":1,"message":"252","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":13},{"ruleId":"218","severity":1,"message":"229","line":28,"column":20,"nodeType":"220","messageId":"221","endLine":28,"endColumn":28},{"ruleId":"222","severity":1,"message":"261","line":33,"column":6,"nodeType":"224","endLine":33,"endColumn":8,"suggestions":"262"},{"ruleId":"218","severity":1,"message":"263","line":8,"column":3,"nodeType":"220","messageId":"221","endLine":8,"endColumn":21},{"ruleId":"218","severity":1,"message":"252","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":13},{"ruleId":"218","severity":1,"message":"264","line":12,"column":10,"nodeType":"220","messageId":"221","endLine":12,"endColumn":18},{"ruleId":"218","severity":1,"message":"265","line":15,"column":10,"nodeType":"220","messageId":"221","endLine":15,"endColumn":20},{"ruleId":"218","severity":1,"message":"230","line":15,"column":22,"nodeType":"220","messageId":"221","endLine":15,"endColumn":41},{"ruleId":"218","severity":1,"message":"266","line":16,"column":8,"nodeType":"220","messageId":"221","endLine":16,"endColumn":18},{"ruleId":"218","severity":1,"message":"267","line":17,"column":8,"nodeType":"220","messageId":"221","endLine":17,"endColumn":16},{"ruleId":"218","severity":1,"message":"268","line":18,"column":8,"nodeType":"220","messageId":"221","endLine":18,"endColumn":19},{"ruleId":"218","severity":1,"message":"269","line":19,"column":8,"nodeType":"220","messageId":"221","endLine":19,"endColumn":14},{"ruleId":"218","severity":1,"message":"229","line":27,"column":20,"nodeType":"220","messageId":"221","endLine":27,"endColumn":28},{"ruleId":"218","severity":1,"message":"270","line":29,"column":10,"nodeType":"220","messageId":"221","endLine":29,"endColumn":17},{"ruleId":"218","severity":1,"message":"271","line":29,"column":19,"nodeType":"220","messageId":"221","endLine":29,"endColumn":29},{"ruleId":"218","severity":1,"message":"272","line":54,"column":15,"nodeType":"220","messageId":"221","endLine":54,"endColumn":17},{"ruleId":"231","severity":1,"message":"244","line":58,"column":25,"nodeType":"233","messageId":"234","endLine":58,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":59,"column":26,"nodeType":"233","messageId":"234","endLine":59,"endColumn":28},{"ruleId":"231","severity":1,"message":"244","line":60,"column":29,"nodeType":"233","messageId":"234","endLine":60,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":65,"column":25,"nodeType":"233","messageId":"234","endLine":65,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":66,"column":26,"nodeType":"233","messageId":"234","endLine":66,"endColumn":28},{"ruleId":"231","severity":1,"message":"244","line":67,"column":29,"nodeType":"233","messageId":"234","endLine":67,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":87,"column":21,"nodeType":"233","messageId":"234","endLine":87,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":88,"column":22,"nodeType":"233","messageId":"234","endLine":88,"endColumn":24},{"ruleId":"231","severity":1,"message":"244","line":89,"column":25,"nodeType":"233","messageId":"234","endLine":89,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":100,"column":21,"nodeType":"233","messageId":"234","endLine":100,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":100,"column":41,"nodeType":"233","messageId":"234","endLine":100,"endColumn":43},{"ruleId":"231","severity":1,"message":"244","line":104,"column":20,"nodeType":"233","messageId":"234","endLine":104,"endColumn":22},{"ruleId":"231","severity":1,"message":"244","line":105,"column":21,"nodeType":"233","messageId":"234","endLine":105,"endColumn":23},{"ruleId":"231","severity":1,"message":"244","line":106,"column":24,"nodeType":"233","messageId":"234","endLine":106,"endColumn":26},{"ruleId":"257","severity":1,"message":"273","line":178,"column":13,"nodeType":"259","messageId":"274","endLine":180,"endColumn":14},{"ruleId":"257","severity":1,"message":"258","line":198,"column":1,"nodeType":"259","messageId":"260","endLine":202,"endColumn":2},{"ruleId":"218","severity":1,"message":"239","line":8,"column":10,"nodeType":"220","messageId":"221","endLine":8,"endColumn":13},{"ruleId":"218","severity":1,"message":"270","line":15,"column":10,"nodeType":"220","messageId":"221","endLine":15,"endColumn":17},{"ruleId":"218","severity":1,"message":"271","line":15,"column":19,"nodeType":"220","messageId":"221","endLine":15,"endColumn":29},{"ruleId":"218","severity":1,"message":"272","line":42,"column":15,"nodeType":"220","messageId":"221","endLine":42,"endColumn":17},{"ruleId":"231","severity":1,"message":"244","line":46,"column":25,"nodeType":"233","messageId":"234","endLine":46,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":47,"column":26,"nodeType":"233","messageId":"234","endLine":47,"endColumn":28},{"ruleId":"231","severity":1,"message":"244","line":48,"column":29,"nodeType":"233","messageId":"234","endLine":48,"endColumn":31},{"ruleId":"231","severity":1,"message":"244","line":53,"column":25,"nodeType":"233","messageId":"234","endLine":53,"endColumn":27},{"ruleId":"231","severity":1,"message":"244","line":54,"column":26,"nodeType":"233","messageId":"234","endLine":54,"endColumn":28},{"ruleId":"231","severity":1,"message":"244","line":55,"column":29,"nodeType":"233","messageId":"234","endLine":55,"endColumn":31},{"ruleId":"218","severity":1,"message":"253","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"214","replacedBy":"275"},{"ruleId":"216","replacedBy":"276"},{"ruleId":"231","severity":1,"message":"232","line":67,"column":33,"nodeType":"233","messageId":"234","endLine":67,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":159,"column":33,"nodeType":"233","messageId":"234","endLine":159,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":247,"column":33,"nodeType":"233","messageId":"234","endLine":247,"endColumn":35},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["279"],"'Redirect' is defined but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'responsiveFontSizes' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["277"],["278"],"'ArrowBackIosIcon' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'set' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'skip' is assigned a value but never used.","'setSkip' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'loadAll'. Either include it or remove the dependency array.",["280"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'payrollData'. Either include it or remove the dependency array.",["281"],"'employees' is defined but never used.","'employees' is assigned a value but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'BusinessIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPrevRequests'. Either include it or remove the dependency array.",["282"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'sync'. Either include it or remove the dependency array.",["283"],"'KeyboardTimePicker' is defined but never used.","'DataGrid' is defined but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'present' is assigned a value but never used.","'setPresent' is assigned a value but never used.","'d2' is assigned a value but never used.","Nested block is redundant.","redundantNestedBlock",["277"],["278"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [dispatch]",{"range":"294","text":"295"},"Update the dependencies array to be: [loadAll]",{"range":"296","text":"297"},"Update the dependencies array to be: [payrollData]",{"range":"298","text":"299"},"Update the dependencies array to be: [loadPrevRequests]",{"range":"300","text":"301"},"Update the dependencies array to be: [sync]",{"range":"302","text":"303"},[1116,1118],"[dispatch]",[7238,7240],"[loadAll]",[1544,1546],"[payrollData]",[1551,1553],"[loadPrevRequests]",[1157,1159],"[sync]"]